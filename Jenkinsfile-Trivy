pipeline {
    agent any

    environment {
        IMAGE_NAME = "us-central1-docker.pkg.dev/clever-axe-447305-k1/sample-images-repo/simple-webapp"
        TAG = "latest"
    }

    stages {
        stage('Clone Repo') {
            steps {
                git url: 'https://github.com/shar1810/Simple-Webapp.git', branch: 'main'
            }
        }

        stage('Code Scan (Trivy FS)') {
            steps {
        echo "Running Trivy file system scan..."
        sh '''
            mkdir -p trivy-reports
            curl -sSL -o trivy-reports/html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
            trivy fs --format json --output trivy-reports/fs-scan.json .
            trivy fs --format template --template trivy-reports/html.tpl --output trivy-reports/fs-scan.html .
            '''
            }
        }

        stage('Authenticate GCP') {
            steps {
                withCredentials([file(credentialsId: 'gcp-service-account-json', variable: 'SERVICE_ACCOUNT_KEY')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$SERVICE_ACCOUNT_KEY
                        gcloud auth configure-docker us-central1-docker.pkg.dev
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $IMAGE_NAME:$TAG ."
            }
        }

        stage('Image Scan (Trivy Image)') {
            steps {
        echo "Scanning built Docker image with Trivy..."
        sh '''
            mkdir -p trivy-reports
            trivy image --format json --output trivy-reports/image-scan.json $IMAGE_NAME:$TAG
            curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o html.tpl
            trivy image --format template --template @html.tpl --output trivy-reports/image-scan.html $IMAGE_NAME:$TAG
            '''
            }
        }

        stage('Push to Artifact Registry') {
            steps {
                sh "docker push $IMAGE_NAME:$TAG"
            }
        }

        stage('Deploy Locally') {
            steps {
                sh "docker rm -f simple-webapp || true"
                sh "docker run -d -p 82:80 --name simple-webapp $IMAGE_NAME:$TAG"
            }
        }
    }

    post {
    always {
        publishHTML(target: [
            reportDir: 'trivy-reports',
            reportFiles: 'image-scan.html',
            reportName: 'Trivy Image Scan Report',
            keepAll: true,
            allowMissing: true,
            alwaysLinkToLastBuild: true
        ])
    }
}

}
